// Code generated by "stringer -type=SampleInt -output=stringer_gen.go -trimprefix=COUNTER_"; DO NOT EDIT.

package tools

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[COUNTER_A-100]
	_ = x[COUNTER_B-101]
	_ = x[COUNTER_C-102]
	_ = x[COUNTER_D-103]
}

const _SampleInt_name = "ABCD"

var _SampleInt_index = [...]uint8{0, 1, 2, 3, 4}

func (i SampleInt) String() string {
	i -= 100
	if i < 0 || i >= SampleInt(len(_SampleInt_index)-1) {
		return "SampleInt(" + strconv.FormatInt(int64(i+100), 10) + ")"
	}
	return _SampleInt_name[_SampleInt_index[i]:_SampleInt_index[i+1]]
}

var _SampleInt_list = []string{
	"A",
	"B",
	"C",
	"D",
}

func SampleIntList() []string {
	return _SampleInt_list
}

var _SampleInt_value_list = []int64{
	100,
	101,
	102,
	103,
}

func SampleIntValueList() []int64 {
	return _SampleInt_value_list
}

var _SampleInt_map = map[string]int64{
	"A": 100,
	"B": 101,
	"C": 102,
	"D": 103,
}

func SampleIntMap() map[string]int64 {
	return _SampleInt_map
}

var _SampleInt_value_map = map[int64]string{
	100: "A",
	101: "B",
	102: "C",
	103: "D",
}

func SampleIntValueMap() map[int64]string {
	return _SampleInt_value_map
}
