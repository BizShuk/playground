// Code generated by "stringer -type=SampleInt2 -output=stringer_gen2.go -linecomment -trimprefix=COUNTER1_"; DO NOT EDIT.

package tools

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[COUNTER1_A-0]
	_ = x[COUNTER1_B-1]
	_ = x[COUNTER1_C-2]
	_ = x[COUNTER1_D-3]
	_ = x[COUNTER1_E-4]
	_ = x[COUNTER1_F-5]
	_ = x[COUNTER1_G-6]
	_ = x[COUNTER1_H-7]
	_ = x[COUNTER1_I-8]
	_ = x[COUNTER1_J-9]
	_ = x[COUNTER1_K-10]
	_ = x[COUNTER1_L-11]
	_ = x[COUNTER1_M-12]
}

const _SampleInt2_name = "ABCDEFGHIJKLM"

var _SampleInt2_index = [...]uint8{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13}

func (i SampleInt2) String() string {
	if i < 0 || i >= SampleInt2(len(_SampleInt2_index)-1) {
		return "SampleInt2(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _SampleInt2_name[_SampleInt2_index[i]:_SampleInt2_index[i+1]]
}

var _SampleInt2_list = []string{
	"A",
	"B",
	"C",
	"D",
	"E",
	"F",
	"G",
	"H",
	"I",
	"J",
	"K",
	"L",
	"M",
}

func SampleInt2List() []string {
	return _SampleInt2_list
}

var _SampleInt2_value_list = []int64{
	0,
	1,
	2,
	3,
	4,
	5,
	6,
	7,
	8,
	9,
	10,
	11,
	12,
}

func SampleInt2ValueList() []int64 {
	return _SampleInt2_value_list
}

var _SampleInt2_map = map[string]int64{
	"A": 0,
	"B": 1,
	"C": 2,
	"D": 3,
	"E": 4,
	"F": 5,
	"G": 6,
	"H": 7,
	"I": 8,
	"J": 9,
	"K": 10,
	"L": 11,
	"M": 12,
}

func SampleInt2Map() map[string]int64 {
	return _SampleInt2_map
}

var _SampleInt2_value_map = map[int64]string{
	0:  "A",
	1:  "B",
	2:  "C",
	3:  "D",
	4:  "E",
	5:  "F",
	6:  "G",
	7:  "H",
	8:  "I",
	9:  "J",
	10: "K",
	11: "L",
	12: "M",
}

func SampleInt2ValueMap() map[int64]string {
	return _SampleInt2_value_map
}
